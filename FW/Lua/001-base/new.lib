--定义new表
local new={}
--定义对象池,所有new的对象都将保存在objpool
new.objpool={}
--定义下一个对象的index
new.objnextindex=1

local new_metatable=
{
__call=function(self,path)
	if path==nil or type(path)~="string" then
		return nil
	end
	local file=io.open(path,"r")
	if file then
		local content=file:read("a")
		file:close()
		local objindex=new.objnextindex
		local objpath="new.objpool[" .. tostring(objindex) .."]"
		new.objnextindex=new.objnextindex+1
		--替换content中的this.为new.objpool[objindex].
		content=string.gsub(content,"this%.",objpath .. ".")
		local f=load(content)
		if f==nil then
			return nil
		end
		self.objpool[objindex]=f()
		--添加delete函数,通过 变量名:delete 删除在new这个table中的引用
		self.objpool[objindex].delete=function(self)
			--仅删除new这个table中的引用，若这个类在其它地方有全局引用,可能不会进行垃圾回收
			new.objpool[objindex]=nil
		end
		return self.objpool[objindex]
	end
	return nil
end
}

setmetatable(new,new_metatable)

_G["new"]=new

return new